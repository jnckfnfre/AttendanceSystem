// <auto-generated />
using System;
using AttendanceSystem.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AttendanceSystem.API.Migrations
{
    [DbContext(typeof(AttendanceDbContext))]
    [Migration("20250425021702_RemoveCourseIdAndTitleColumns")]
    partial class RemoveCourseIdAndTitleColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AttendanceSystem.API.Models.ClassSession", b =>
                {
                    b.Property<DateTime>("SessionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("SESSION_DATE");

                    b.Property<string>("Course_Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("COURSE_ID");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("PASSWORD");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("QUIZ_ID");

                    b.HasKey("SessionDate", "Course_Id");

                    b.HasIndex("Course_Id");

                    b.HasIndex("QuizId");

                    b.ToTable("class_session");
                });

            modelBuilder.Entity("AttendanceSystem.API.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QUESTIONS_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("CORRECT_ANSWER");

                    b.Property<string>("OptionA")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("OPTION_A");

                    b.Property<string>("OptionB")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("OPTION_B");

                    b.Property<string>("OptionC")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("OPTION_C");

                    b.Property<string>("OptionD")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("OPTION_D");

                    b.Property<int>("PoolId")
                        .HasColumnType("int")
                        .HasColumnName("POOL_ID");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("QUIZ_ID");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("TEXT");

                    b.HasKey("QuestionId");

                    b.HasIndex("PoolId");

                    b.HasIndex("QuizId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("AttendanceSystem.API.Models.QuestionPool", b =>
                {
                    b.Property<int>("PoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("POOL_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PoolId"));

                    b.Property<string>("PoolName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("POOL_NAME");

                    b.HasKey("PoolId");

                    b.ToTable("Question_Pool");
                });

            modelBuilder.Entity("AttendanceSystem.API.Models.Quiz", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QUIZ_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("QuizId"));

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DUE_DATE");

                    b.Property<int>("PoolId")
                        .HasColumnType("int")
                        .HasColumnName("POOL_ID");

                    b.HasKey("QuizId");

                    b.HasIndex("PoolId");

                    b.ToTable("Quiz");
                });

            modelBuilder.Entity("AttendanceSystem.API.Models.Student", b =>
                {
                    b.Property<string>("UtdId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UTD_ID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("Net_Id")
                        .HasColumnType("longtext")
                        .HasColumnName("NET_ID");

                    b.HasKey("UtdId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("AttendedBy", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ATTENDANCE_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<string>("Course_Id")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("COURSE_ID");

                    b.Property<DateTime>("SessionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("SESSION_DATE");

                    b.Property<string>("UtdId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UTD_ID");

                    b.HasKey("AttendanceId");

                    b.HasIndex("UtdId");

                    b.HasIndex("SessionDate", "Course_Id", "UtdId")
                        .IsUnique();

                    b.ToTable("Attended_By");
                });

            modelBuilder.Entity("Course", b =>
                {
                    b.Property<string>("Course_Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("COURSE_ID");

                    b.Property<string>("Course_Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("COURSE_NAME");

                    b.Property<TimeSpan>("End_Time")
                        .HasColumnType("time(6)")
                        .HasColumnName("END_TIME");

                    b.Property<TimeSpan>("Start_Time")
                        .HasColumnType("time(6)")
                        .HasColumnName("START_TIME");

                    b.HasKey("Course_Id");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("Submission", b =>
                {
                    b.Property<int>("Submission_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SUBMISSION_ID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Submission_Id"));

                    b.Property<string>("Answer_1")
                        .HasColumnType("longtext")
                        .HasColumnName("ANSWER1");

                    b.Property<string>("Answer_2")
                        .HasColumnType("longtext")
                        .HasColumnName("ANSWER2");

                    b.Property<string>("Answer_3")
                        .HasColumnType("longtext")
                        .HasColumnName("ANSWER3");

                    b.Property<string>("Course_Id")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("COURSE_ID");

                    b.Property<string>("Ip_Address")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("IP_ADDRESS");

                    b.Property<int>("Quiz_Id")
                        .HasColumnType("int")
                        .HasColumnName("QUIZ_ID");

                    b.Property<DateTime>("SessionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("SESSION_DATE");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("STATUS");

                    b.Property<DateTime>("Submission_Time")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("SUBMISSION_TIME");

                    b.Property<string>("Utd_Id")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UTD_ID");

                    b.HasKey("Submission_Id");

                    b.HasIndex("Quiz_Id");

                    b.HasIndex("Utd_Id");

                    b.HasIndex("SessionDate", "Course_Id");

                    b.HasIndex("Course_Id", "SessionDate", "Utd_Id", "Quiz_Id")
                        .IsUnique();

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("AttendanceSystem.API.Models.ClassSession", b =>
                {
                    b.HasOne("Course", "Course")
                        .WithMany()
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceSystem.API.Models.Quiz", "Quiz")
                        .WithMany("Sessions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("AttendanceSystem.API.Models.Question", b =>
                {
                    b.HasOne("AttendanceSystem.API.Models.QuestionPool", "QuestionPool")
                        .WithMany("Questions")
                        .HasForeignKey("PoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceSystem.API.Models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionPool");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("AttendanceSystem.API.Models.Quiz", b =>
                {
                    b.HasOne("AttendanceSystem.API.Models.QuestionPool", "QuestionPool")
                        .WithMany("Quizzes")
                        .HasForeignKey("PoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionPool");
                });

            modelBuilder.Entity("AttendedBy", b =>
                {
                    b.HasOne("AttendanceSystem.API.Models.Student", "Student")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("UtdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceSystem.API.Models.ClassSession", "ClassSession")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("SessionDate", "Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassSession");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Submission", b =>
                {
                    b.HasOne("AttendanceSystem.API.Models.Quiz", "Quiz")
                        .WithMany("Submissions")
                        .HasForeignKey("Quiz_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceSystem.API.Models.Student", "Student")
                        .WithMany("Submissions")
                        .HasForeignKey("Utd_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceSystem.API.Models.ClassSession", "ClassSession")
                        .WithMany("Submissions")
                        .HasForeignKey("SessionDate", "Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassSession");

                    b.Navigation("Quiz");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AttendanceSystem.API.Models.ClassSession", b =>
                {
                    b.Navigation("AttendanceRecords");

                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("AttendanceSystem.API.Models.QuestionPool", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Quizzes");
                });

            modelBuilder.Entity("AttendanceSystem.API.Models.Quiz", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Sessions");

                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("AttendanceSystem.API.Models.Student", b =>
                {
                    b.Navigation("AttendanceRecords");

                    b.Navigation("Submissions");
                });
#pragma warning restore 612, 618
        }
    }
}
