
    @* Hamza Khawaja 4/13/2025 
        - Created view for loading Quiz after student is authenticated 
    *@

@model AttendanceSystem.API.Models.Quiz // This view expects a Quiz object, which includes properties like QuizId, Title, and a collection of Questions

@* printing quiz date  *@
<h2> Quiz: @DateTime.Now.ToString("MMMM dd, yyyy")</h2>

@if (Model.Questions == null || !Model.Questions.Any()) //ensures that if there are no questions, display a message.
{
    <p>No quiz questions available.</p>
}
else
{
    @* The form that will gather the student's answers *@
    <form method="post" asp-action="SubmitAnswers">
        @* loop through each question, conver the Questions collection to a list to allow indexing *@
        @for (int i = 0; i < Model.Questions.Count; i++) 
        {
            var question = Model.Questions.ToList()[i]; 
            // convert the ICollection to a List to allow indexing 
            <div class="mb-4">
                <p><strong>Question @(@i + 1):</strong> @question.Text</p>
                <!-- Display each answer option as radio buttons -->
                <div>
                    <input type="radio" name="Answers[@i]" value="A" required /> A. @question.OptionA <br />
                    <input type="radio" name="Answers[@i]" value="B" /> B. @question.OptionB <br />
                    <input type="radio" name="Answers[@i]" value="C" /> C. @question.OptionC <br />
                    <input type="radio" name="Answers[@i]" value="D" /> D. @question.OptionD
                </div>
            </div>
        }
        <!-- Hidden field to send the Quiz ID, this sends the Quiz ID along with the answers so the controller knows which quiz the responses belong to. -->
        <input type="hidden" name="QuizId" value="@Model.QuizId" /> 
        <button type="submit" class="btn btn-success">Submit Answers</button>
    </form>
}

